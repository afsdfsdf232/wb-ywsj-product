{"remainingRequest":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\iview-loader\\index.js??ref--0-2!D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\src\\layouts\\basic-layout\\header-user\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\src\\layouts\\basic-layout\\header-user\\index.vue","mtime":1623978686000},{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628602912197},{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\babel-loader\\lib\\index.js","mtime":1628602899323},{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628602912197},{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\vue-loader\\lib\\index.js","mtime":1628602913036},{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\iview-loader\\index.js","mtime":1628602915515}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions } from 'vuex';\nimport util from '@/libs/util';\nexport default {\n  name: 'iHeaderUser',\n  data: function data() {\n    return {\n      passwordModal: false,\n      infoFlag: false,\n      formValidate: {\n        password: '',\n        password1: '',\n        password2: ''\n      },\n      ruleValidate: {\n        password: [{\n          required: true,\n          message: '旧密码不能为空',\n          trigger: 'blur'\n        }, {\n          type: 'string',\n          min: 6,\n          message: '最小长度6位',\n          trigger: 'blur'\n        }],\n        password1: [{\n          required: true,\n          message: '新密码不能为空',\n          trigger: 'blur'\n        } // { type: 'string', min: 6, message: '最小长度6位', trigger: 'blur' }\n        ],\n        password2: [{\n          required: true,\n          message: '确认新密码不能为空',\n          trigger: 'blur'\n        }, {\n          type: 'string',\n          min: 6,\n          message: '最小长度6位',\n          trigger: 'blur'\n        }]\n      },\n      InfoValidate: {\n        staffName: '',\n        moblieNumber: '',\n        email: ''\n      },\n      InfRulesValidate: {\n        staffName: [{\n          required: true,\n          message: '用户名不能为空',\n          trigger: 'blur'\n        }],\n        moblieNumber: [{\n          required: true,\n          message: '手机号不能为空',\n          trigger: 'blur'\n        }, {\n          type: 'string',\n          message: '手机号格式输入错误',\n          trigger: 'blur',\n          pattern: util.mobileReg\n        }],\n        email: [{\n          required: true,\n          message: '邮箱不能为空',\n          trigger: 'blur'\n        }, {\n          type: 'string',\n          message: '邮箱格式输入错误',\n          trigger: 'blur',\n          pattern: util.emailReg\n        }]\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState('admin/user', ['info'])), mapState('admin/layout', ['isMobile', 'logoutConfirm'])),\n  methods: _objectSpread(_objectSpread({}, mapActions('admin/account', ['logout'])), {}, {\n    submitBtn: function submitBtn() {\n      var _this = this;\n\n      this.$refs.formValidate.validate(function (valid) {\n        if (valid) {\n          _this.$Message.success('Success!');\n\n          _this.passwordModal = false;\n        } else {\n          _this.$Message.error('请输入必填项');\n        }\n      });\n    },\n    // 保存信息\n    infoSaveBtn: function infoSaveBtn() {\n      var _this2 = this;\n\n      this.$refs.InfoValidate.validate(function (valid) {\n        if (valid) {\n          util.ajax({\n            data: {\n              _call: 'im.imService.editMyData',\n              params: _this2.InfoValidate\n            }\n          }).then(function (res) {\n            if (res.output.flag) {\n              _this2.$Message.success('修改成功');\n\n              var info = {};\n              Object.assign(info, _this2.info, _this2.InfoValidate);\n\n              _this2.$store.dispatch('admin/user/set', info);\n\n              _this2.infoFlag = false;\n            }\n          });\n        } else {\n          _this2.$Message.error('请输入必填项');\n        }\n      });\n    },\n    handleClick: function handleClick(name) {\n      if (name === 'logout') {\n        this.logout({\n          confirm: this.logoutConfirm,\n          vm: this\n        });\n      } else if (name === 'center') {\n        // 重置表单\n        this.$refs.formValidate.resetFields();\n        this.passwordModal = true;\n      } else if (name === 'setting') {\n        this.$refs.InfoValidate.resetFields();\n        this.InfoValidate.staffName = this.info.staffName;\n        this.InfoValidate.moblieNumber = this.info.moblieNumber;\n        this.InfoValidate.email = this.info.email || '';\n        this.infoFlag = true;\n      }\n    }\n  }),\n  mounted: function mounted() {\n    console.log(this.info);\n    this.InfoValidate.staffName = this.info.staffName;\n    this.InfoValidate.moblieNumber = this.info.moblieNumber;\n    this.InfoValidate.email = this.info.email || '';\n    console.log('this.InfoValidate', this.InfoValidate);\n  }\n};",null]}