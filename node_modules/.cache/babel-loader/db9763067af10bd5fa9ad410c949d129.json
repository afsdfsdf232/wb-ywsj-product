{"remainingRequest":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\src\\libs\\util.js","dependencies":[{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\src\\libs\\util.js","mtime":1623985096000},{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628602912197},{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\babel-loader\\lib\\index.js","mtime":1628602899323},{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\eslint-loader\\index.js","mtime":1607701091992}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport cookies from './util.cookies';\nimport log from './util.log';\nimport db from './util.db';\nimport axios from 'axios';\nimport Qs from 'qs';\nimport date from './date';\nimport * as reg from './RegExp';\nimport Setting from '@/setting';\nvar util = {\n  cookies: cookies,\n  log: log,\n  db: db,\n  reg: reg\n};\nvar windowHeight = document.documentElement.clientHeight || document.body.clientHeight;\nutil.footerHeight = 50;\nutil.contentHeight = windowHeight - 108;\nconsole.log('windowHeight', windowHeight);\nutil.imgType = ['jpg', 'png', 'jpeg', 'webp', 'svg', 'bmp', 'gif'];\nutil.videoType = ['mp4', '3gp', 'rmvb', 'avi'];\n\nutil.utf16toEntities = function utf16toEntities(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  var patt = /[\\ud800-\\udbff][\\udc00-\\udfff]/g; // 检测utf16字符正则\n\n  str = str.replace(patt, function (char) {\n    var H, L, code;\n\n    if (char.length === 2) {\n      H = char.charCodeAt(0); // 取出高位\n\n      L = char.charCodeAt(1); // 取出低位\n\n      code = (H - 0xd800) * 0x400 + 0x10000 + L - 0xdc00; // 转换算法\n\n      return '&#' + code + ';';\n    } else {\n      return char;\n    }\n  });\n  return str;\n}; // 格式化参数，所有接口提交前都要执行改方法\n\n\nutil.formatParams = function (params) {\n  for (var key in params) {\n    if (_typeof(params[key]) === 'object') {\n      util.formatParams(params[key]);\n    } else {\n      // params[key] = escape(params[key]);\n      // params[key] = params[key].replace(/\\%u/g, '\\\\u');\n      params[key] = util.utf16toEntities(params[key]);\n    }\n  }\n};\n\nutil.getQueryString = function (url, name) {\n  var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)');\n  var r = url.split('?')[1].match(reg);\n  if (r != null) return decodeURI(r[2]);\n  return '';\n}; // 日期格式化\n\n\nutil.formatDate = date.formatDate;\nutil.getDateDiff = date.getDateDiff; // 验证正则\n\nutil.mobileReg = /^1[3-9]\\d{9}$/;\nutil.cellReg = /^(0[0-9]{2,3}-)?([2-9][0-9]{6,7})+(-[0-9]{1,4})?$/;\nutil.emailReg = new RegExp('^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$');\nutil.priceReg = /^\\d+(\\.\\d{1,2})?$/; // 金额验证\n\nutil.numberReg = /^\\d+(\\.\\d+)?$/; // 非负浮点数\n\nutil.numberReg2 = /^\\\\d+$/; // 正整数\n\nutil.isChinese = /[\\u4E00-\\u9FA5]/; // 中文字符\n\nutil.letterReg = /^[a-z|A-Z]/; // 字母开头\n// 去除时间后面毫秒\n\nutil.removeMS = function (mydate) {\n  if (mydate === '') {\n    return '';\n  }\n\n  var Str = mydate.split('.');\n  return Str[0];\n};\n\nutil.Totime = function timestampToTime(timestamp) {\n  var date = new Date(timestamp * 1000);\n  var Y = date.getFullYear() + '-';\n  var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n  var D = change(date.getDate()) + ' ';\n  var h = change(date.getHours()) + ':';\n  var m = change(date.getMinutes()) + ':';\n  var s = change(date.getSeconds());\n  return Y + M + D + h + m + s;\n};\n\nfunction change(t) {\n  if (t < 10) {\n    return '0' + t;\n  } else {\n    return t;\n  }\n}\n/*\r\n * 判断是否为空对象\r\n * @param obj 目标对象\r\n * @return 判断结果 Boolean\r\n * */\n\n\nutil.isEmptyObject = function (obj) {\n  for (var name in obj) {\n    return false;\n  }\n\n  return true;\n};\n\nfunction tTitle() {\n  var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  if (window && window.$t) {\n    if (title.indexOf('$t:') === 0) {\n      return window.$t(title.split('$t:')[1]);\n    } else {\n      return title;\n    }\n  } else {\n    return title;\n  }\n}\n/*\r\n * B转KB、MB、GB、TB\r\n * @param bytes\r\n * */\n\n\nutil.bytesToSize = function (bytes) {\n  // 防止NaN类型\n  if (typeof bytes !== 'number') {\n    return bytes;\n  }\n\n  if (bytes === 0) return '0 B'; // eslint-disable-next-line one-var\n\n  var k = 1024,\n      // or 1024\n  sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n      i = Math.floor(Math.log(bytes) / Math.log(k));\n  return (bytes / Math.pow(k, i)).toFixed(2) + sizes[i];\n};\n/*\r\n * 获取文件类型\r\n * @param fileName  文件名称\r\n * */\n\n\nutil.getFileType = function (fileName) {\n  if (!fileName) {\n    console.error('请传入文件名');\n    return;\n  }\n\n  return fileName.split('.')[fileName.split('.').length - 1].toLocaleLowerCase();\n};\n\nutil.resizeElementH = function (params) {\n  console.log();\n  var ch = document.documentElement.clientHeight || document.body.clientHeight; // 屏幕高度\n\n  var cw = document.documentElement.clientWidth || document.body.clientWidth; // 屏幕宽度\n\n  var header = 64 + 24 + 44;\n  var H = 0;\n  /* if (typeof params === 'array') {\r\n    } else if (typeof params === 'object') {\r\n      H = params.$el.offsetHeight\r\n  } */\n\n  params.forEach(function (item) {\n    H += item.$el.offsetHeight;\n  });\n  return ch - header - H;\n};\n/**\r\n * @description 更改标题\r\n * @param {Object} title 标题\r\n * @param {Object} count 未读消息数提示（可视情况选择使用或不使用）\r\n */\n\n\nutil.title = function (_ref) {\n  var title = _ref.title,\n      count = _ref.count;\n  title = tTitle(title);\n  var fullTitle = title ? \"\".concat(title, \" - \").concat(Setting.titleSuffix) : Setting.titleSuffix;\n  if (count) fullTitle = \"(\".concat(count, \"\\u6761\\u6D88\\u606F)\").concat(fullTitle);\n  window.document.title = fullTitle;\n};\n\nfunction requestAnimation(task) {\n  if ('requestAnimationFrame' in window) {\n    return window.requestAnimationFrame(task);\n  }\n\n  setTimeout(task, 16);\n}\n\nexport { requestAnimation };\nexport default util;",null]}