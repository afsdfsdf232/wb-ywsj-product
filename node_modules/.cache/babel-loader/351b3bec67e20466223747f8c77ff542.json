{"remainingRequest":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\src\\store\\modules\\admin\\modules\\user.js","dependencies":[{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\src\\store\\modules\\admin\\modules\\user.js","mtime":1589175614000},{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628602912197},{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\babel-loader\\lib\\index.js","mtime":1628602899323},{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\eslint-loader\\index.js","mtime":1607701091992}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"D:/project/WB/d2/\\u514D\\u8D39\\u9886\\u524D\\u7AEF\\u4EFB\\u52A1\\u5305/ywsj-product/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\r\n * 用户信息\r\n * */\nexport default {\n  namespaced: true,\n  state: {\n    // 用户信息\n    info: {},\n    limitButtons: ''\n  },\n  actions: {\n    /**\r\n     * @description 设置用户数据\r\n     * @param {Object} state vuex state\r\n     * @param {Object} dispatch vuex dispatch\r\n     * @param {*} info info\r\n     */\n    set: function set(_ref, info) {\n      var state = _ref.state,\n          dispatch = _ref.dispatch;\n      return new Promise( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  // store 赋值\n                  state.info = info; // 持久化\n\n                  _context.next = 3;\n                  return dispatch('admin/db/set', {\n                    dbName: 'sys',\n                    path: 'user.info',\n                    value: info,\n                    user: true\n                  }, {\n                    root: true\n                  });\n\n                case 3:\n                  // end\n                  resolve();\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n\n    /**\r\n     * @description 从数据库取用户数据\r\n     * @param {Object} state vuex state\r\n     * @param {Object} dispatch vuex dispatch\r\n     */\n    load: function load(_ref3) {\n      var state = _ref3.state,\n          dispatch = _ref3.dispatch;\n      return new Promise( /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resolve) {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return dispatch('admin/db/get', {\n                    dbName: 'sys',\n                    path: 'user.info',\n                    defaultValue: {},\n                    user: true\n                  }, {\n                    root: true\n                  });\n\n                case 2:\n                  state.info = _context2.sent;\n                  // end\n                  resolve();\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};",null]}