{"remainingRequest":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\src\\router\\index.js","dependencies":[{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\src\\router\\index.js","mtime":1623979604000},{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628602912197},{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\babel-loader\\lib\\index.js","mtime":1628602899323},{"path":"D:\\project\\WB\\d2\\免费领前端任务包\\ywsj-product\\node_modules\\eslint-loader\\index.js","mtime":1607701091992}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"D:/project/WB/d2/\\u514D\\u8D39\\u9886\\u524D\\u7AEF\\u4EFB\\u52A1\\u5305/ywsj-product/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport iView from 'view-design';\nimport util from '@/libs/util';\nimport Setting from '@/setting';\nimport store from '@/store/index'; // 路由数据\n\nimport routes from './routes';\nVue.use(VueRouter); // 导出路由 在 main.js 里使用\n\nvar router = new VueRouter({\n  routes: routes,\n  mode: Setting.routerMode,\n  base: Setting.routerBase\n});\n/**\r\n * 路由拦截\r\n * 权限验证\r\n */\n\nrouter.beforeEach(function (to, from, next) {\n  if (Setting.showProgressBar) iView.LoadingBar.start(); // 判断是否需要登录才可以进入\n\n  if (to.matched.some(function (_) {\n    return _.meta.auth;\n  })) {\n    // 这里依据 token 判断是否登录，可视情况修改\n    var token = util.cookies.get('token');\n\n    if (token && token !== 'undefined') {\n      next();\n    } else {\n      // 没有登录的时候跳转到登录界面\n      // 携带上登陆成功之后需要跳转的页面完整路径\n      next({\n        name: 'login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    }\n  } else {\n    // 不需要身份校验 直接通过\n    next();\n  }\n});\nrouter.afterEach( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(to) {\n    var opendList, indexs;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (Setting.showProgressBar) iView.LoadingBar.finish(); // 多页控制 打开新的页面\n\n            opendList = store.state.admin.page.opened;\n            indexs = opendList.findIndex(function (item) {\n              return item.name === to.name;\n            });\n            store.commit('admin/layout/updateLayoutSetting', {\n              key: 'tabs',\n              value: !to.meta.isTabs\n            }); //\n\n            if (to.meta.isTabs) {\n              _context.next = 12;\n              break;\n            }\n\n            if (!(indexs > 0)) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 8;\n            return store.dispatch('admin/page/openedUpdate', {\n              index: indexs,\n              params: to.params,\n              query: to.query,\n              fullPath: to.fullPath\n            });\n\n          case 8:\n            store.dispatch('admin/page/open', to);\n            _context.next = 12;\n            break;\n\n          case 11:\n            store.dispatch('admin/page/open', to);\n\n          case 12:\n            // 更改标题\n            util.title({\n              title: to.meta.title\n            }); // 返回页面顶端\n\n            window.scrollTo(0, 0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport default router;",null]}